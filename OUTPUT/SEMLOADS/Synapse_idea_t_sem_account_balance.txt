#===============================================================================
# TITLE            : BTEQ_IDEA_T_SEM_ACCOUNT_BALANCE.BTQ
# DESCRIPTION      : SCRIPT POPULATES IDEA_T_SEM_ACCOUNT_BALANCE TABLE
# SOURCE TABLES    : IDEA TARGET TABLES
# TARGET TABLE     : IDEA_T_SEM_ACCOUNT_BALANCE
# KEY COLUMNS      : ACCOUNT_ID 
#========================================================================================================












/*************************************************************************************************
                                     DELETE/TRUNCATE SEMANTIC TABLE
*************************************************************************************************/



DELETE APR FROM TD_BIM_FR_TRNG_DB.IDEA_T_SEM_ACCOUNT_BALANCE APR WHERE EXISTS (SELECT 1 FROM TD_BIM_FR_TRNG_DB.IDEA_T_TGT_ACCOUNT ACT WHERE APR.ACCOUNT_ID = ACT.ACCOUNT_ID );





/*************************************************************************************************
                                      INSERT DATA TO SEMANTIC TABLE
*************************************************************************************************/




INSERT INTO  TD_BIM_FR_TRNG_DB.IDEA_T_SEM_ACCOUNT_BALANCE
SELECT 
    ACT.ACCOUNT_ID,
    ACT_PRD.PRODUCT_ID,
    ROW_NUMBER() OVER(ORDER BY ACT.ACCOUNT_ID)  AS ACCT_SEQ_NO,
	RANK() OVER(ORDER BY ACT_PRD.PRODUCT_ID)  AS PROD_SEQ_NO,
    SUM(CASE WHEN LON.LOAN_AMT IS NOT NULL THEN LON.LOAN_AMT ELSE ACT.ACCOUNT_BAL_AMT END ) OVER(PARTITION BY ACT.ACCOUNT_ID ORDER BY ACT.ACCOUNT_OPEN_DTTM) AS CUM_LOAN_BAL_AMT,
    SUM(ACT.ACCOUNT_BAL_AMT) OVER (PARTITION BY ACT_PRD.PRODUCT_ID ) AS BAL_AMT_PROD,
    SUM(CASE WHEN LON.LOAN_AMT IS NOT NULL THEN LON.LOAN_AMT ELSE ACT.ACCOUNT_BAL_AMT END ) OVER (PARTITION BY ACT_PRD.PRODUCT_ID  ORDER BY ACT.ACCOUNT_OPEN_DTTM ROWS UNBOUNDED PRECEDING) AS CUM_BAL_AMT_PER_PROD,
    SUM(CASE WHEN LON.LOAN_AMT IS NOT NULL THEN LON.LOAN_AMT ELSE ACT.ACCOUNT_BAL_AMT END ) OVER (PARTITION BY ACT_PRD.ACCOUNT_ID  ORDER BY ACT.ACCOUNT_OPEN_DTTM ROWS BETWEEN 1 FOLLOWING AND 10 FOLLOWING) AS CUM_BAL_AMT_PROD_BLOCK,
    ROW_NUMBER() OVER (PARTITION BY ACT_PRD.PRODUCT_ID ORDER BY ACT.ACCOUNT_ID) AS PROD_LVL_SEQ_NO,
    RANK() OVER (PARTITION BY ACT_PRD.PRODUCT_ID ORDER BY ACT.ACCOUNT_ID) AS BLOCK_LVL_SEQ_NO,
    DENSE_RANK() OVER (PARTITION BY ACT_PRD.PRODUCT_ID ORDER BY ACT.ACCOUNT_ID) AS BLOCK_LVL_INCR_NO,
	MAX(LOAN_AMT) OVER (PARTITION BY LON.ACCOUNT_ID) AS MAX_LOAN_AMT,
	MIN(ACT.ACCOUNT_BAL_AMT) OVER(PARTITION BY  ACT.ACCOUNT_ID ) MIN_BAL_AMT,
	AVG(LOAN_AMT) OVER (PARTITION BY LON.ACCOUNT_ID) AS AVG_LOAN_AMT
	
  
FROM  TD_BIM_FR_TRNG_DB.IDEA_T_TGT_ACCOUNT_PRODUCT ACT_PRD
RIGHT OUTER JOIN TD_BIM_FR_TRNG_DB.IDEA_T_TGT_ACCOUNT ACT
ON ACT.ACCOUNT_ID = ACT_PRD.ACCOUNT_ID

LEFT JOIN TD_BIM_FR_TRNG_DB.IDEA_T_TGT_LOAN_TERM_ACCT LON
ON ACT.ACCOUNT_ID = LON.ACCOUNT_ID

WHERE  ACT.ACCOUNT_TYPE_CD ='SAVINGS' ;







/****************** RETURN ERROR CODE AND EXIT FROM BTEQ *********************/





#===============================================================================
#END BTEQ EXECUTION
#===============================================================================