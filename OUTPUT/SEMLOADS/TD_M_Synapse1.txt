/*
############################################################################
#
#  FILENAME    : TD_M_BTEQ.BTQ
#  PART OF     : TRANSFORMATION
#          : BTEQ
#  JOB GROUP   : CRM1-(CONTROL-M SCHEDULING TOOL)
#
#  -------------------------------------------------------------------------
#  PURPOSE     : TRANSFORMING AND MOVING DATA TO LOAD READY TABLES
#
#  COMMENTS    : #DESIGNDOCUMENTREFERENCE#
#
#  DATASOURCE  : #DATASOURCE#
#                
#  -------------------------------------------------------------------------
#  DB-VERSION  : TERADATA 16.0
#
#  -------------------------------------------------------------------------
#  PROJECT     : IDEA
#  SUBPROJECT  : ETL DEVELOPEMENT
#
#  AUTHOR      : SURENDRA REDDY KARRI
#  DEPARTMENT  : TERADATA,ETL PROFESSIONAL SERVICES
#  VERSION     : 1.0
#  DATE        : 23-NOV-2020
#  (C) 2020 BY CAPGEMINI CORPORATION
#  -------------------------------------------------------------------------
#  HISTORY:
#  INITIAL VERSION
############################################################################
#  VARIABLE(S) USED 
#	TD_BIM_FR_TRNG_DB
#	
#      
############################################################################
*/;



/*
############################################################################
#  CHECK TO SEE IF THE TABLE IS PRESENT OR NOT 
############################################################################
#  THE DECISION ABOUT THE PRESENCE OF THE TABLE IS BASED
#  ON THE ERRORCODE RETURNED BY THE BTEQ
############################################################################
#  TABLE PRESENCE CHECKING
#  	_____________________
#      |   ERRORCODE         |
#       _____________________
#         | |
#         | --------  ( NOT EQUAL TO 0 )  --->  EXIT
#         |
#         ----------  ( ELSE )		  --->  CONTINUE
############################################################################
#  ACTIVITYCOUNT	: NUMERIC OF ROWS AFFECTED BY SQL REQUEST
#      	_____________________
#      |  ACTIVITYCOUNT      |
#       _____________________
#         | |
#         | --------  ( 0 )		  ---> THE TABLE DOES NOT EXIST
#	  |                                    QUIT
#         ----------  ( 1 )               ---> THE TABLE DOES EXIST
# 					       DELETE DATA FROM TABLE - DELETE_TAB 
############################################################################
*/;



SELECT 
	COUNT(* )
FROM
	DBC.TABLESV 
WHERE
	DATABASENAME = 'IDEA_TEST_PHASE_RPT'
AND	TABLENAME = 'IDEA_T_SEM_COMPLETE_STAS'
HAVING
	COUNT(*) > 0;





/*
############################################################################
#  DELETE THE DATA FROM TABLE 
############################################################################
*/;




DELETE IDEA_TEST_PHASE_TRNS.IDEA_T_SEM_ACCOUNT_DETAILS ALL;





/*
############################################################################
BUSINESS RULE DEFINED FILE 	: $/IDEA-EDW/S - SERVICES AND DELIVERABLES/
#  S05 - EDW STANDARD TRACK
#  IDEA EDW - SOURCE MATRIX  V.1.0 #       ( FILE NAME )
############################################################################
#  SECTION     : 
#  DESCRIPTION : 
############################################################################
#  GROUP BY STATEMENT IS USED TO AVOID ANY DUPLICATE ROWS TO GO IN
############################################################################
#  ALIAS NAME :
#	
############################################################################
*/;




   

/*********************** BATCH LOG ENTRY WHILE STARTING EXECUTION OF BTEQ *********************/


 

 INSERT IDEA_TEST_PHASE_TGT	ABC_T_TGT_BATCH_LOG 
 ( BATCH_ID ,PROCESS_NM,PROCESS_TYPE,BATCH_START_DTTM,BATCH_END_DTTM,BATCH_STATUS,USER_NM,SESSION_ID )
 
 VALUES (:VAR_BATCH_ID ,'IDEA_M_TGT_ACCOUNT','BTEQ' ,CONVERT(DATETIME, GETDATE())(0),NULL, 'STARTED',USER, );



 
 
 /*********************** SCD2 - LOGICALLY CLOSE EXISTING RECORD *********************/


 
 
 
 
UPDATE IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT

SET ACCOUNT_CLOSE_DTTM = CONVERT(DATETIME, GETDATE())(0) ,
    ETL_UPD_DTTM =CURRENT_TIMESTAMP(6)
	
FROM IDEA_TEST_PHASE_TRNS	ABC_T_TRF_ACCOUNT TRF

WHERE IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT.ACCOUNT_CLOSE_DTTM= '9999-12-31 23:59:59'
AND IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT.ACCOUNT_ID =TRF.ACCOUNT_ID
AND ( COALESCE(IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT.SRC_ACCOUNT_NO,'') <> COALESCE(TRF.SRC_ACCOUNT_NO,'') 
OR COALESCE(IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT.ACCOUNT_TYPE_CD,'') <> COALESCE(TRF.ACCOUNT_TYPE_CD,'') 
OR COALESCE(IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT.ACCOUNT_SOURCE_CD,'UNKNOWN') <> COALESCE(TRF.ACCOUNT_SOURCE_CD,'UNKNOWN')
OR COALESCE(IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT.ACCOUNT_CURRENT_STATUS_TYPE_CD,'') <> COALESCE(TRF.ACCOUNT_CURRENT_STATUS_TYPE_CD,'') 
OR COALESCE(IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT.DISPOSITION_CD,'') <> COALESCE(TRF.DISPOSITION_CD,'') 
OR COALESCE(IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT.ACCOUNT_NAME,'') <> COALESCE(TRF.ACCOUNT_NAME,'') 
OR COALESCE(IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT.ACCOUNT_DESC_TXT,'') <> COALESCE(TRF.ACCOUNT_DESC_TXT,'') 
) ;



 

---------------------- SCD2 - ADD NEW RECORD OR MODIFIED RECORD -----

INSERT IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT
(ACCOUNT_ID                    
,SRC_ACCOUNT_NO                
,ACCOUNT_TYPE_CD               
,ACCOUNT_SOURCE_CD             
,ACCOUNT_CURRENT_STATUS_TYPE_CD
,DISPOSITION_CD                
,ACCOUNT_BAL_AMT               
,ACCOUNT_OPEN_DTTM             
,ACCOUNT_CLOSE_DTTM            
,ACCOUNT_NAME                  
,ACCOUNT_DESC_TXT              
,ETL_INS_DTTM                  
,ETL_UPD_DTTM                  
,BATCH_ID                      
)

SELECT 
TRF.ACCOUNT_ID                    
,TRF.SRC_ACCOUNT_NO                
,TRF.ACCOUNT_TYPE_CD               
,TRF.ACCOUNT_SOURCE_CD             
,TRF.ACCOUNT_CURRENT_STATUS_TYPE_CD
,TRF.DISPOSITION_CD                
,TRF.ACCOUNT_BAL_AMT               
,TRF.ACCOUNT_OPEN_DTTM             
,TRF.ACCOUNT_CLOSE_DTTM            
,TRF.ACCOUNT_NAME                  
,TRF.ACCOUNT_DESC_TXT              
,TRF.ETL_INS_DTTM                  
,TRF.ETL_UPD_DTTM                  
,:VAR_BATCH_ID                      


FROM IDEA_TEST_PHASE_TRNS.ABC_T_TRF_ACCOUNT TRF
LEFT JOIN IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT TGT
ON TRF.ACCOUNT_ID = TGT.ACCOUNT_ID
AND TGT.ACCOUNT_CLOSE_DTTM= '9999-12-31 23:59:59'

WHERE TGT.ACCOUNT_ID IS NULL ;




/*********************** BATCH LOG UPDATE FOR COMPLETION OF MACRO *********************/


 

UPDATE IDEA_TEST_PHASE_TGT.ABC_T_TGT_BATCH_LOG ----AFTER LOAN COMPLETED STSUS UPDATE
 SET BATCH_STATUS = 'COMPLETED' ,
     BATCH_END_DTTM = CONVERT(DATETIME, GETDATE())(0)
WHERE IDEA_TEST_PHASE_TGT.ABC_T_TGT_BATCH_LOG.BATCH_ID =:VAR_BATCH_ID
AND IDEA_TEST_PHASE_TGT.ABC_T_TGT_BATCH_LOG.PROCESS_NM ='IDEA_M_TGT_ACCOUNT'
AND IDEA_TEST_PHASE_TGT.ABC_T_TGT_BATCH_LOG.SESSION_ID =SESSION
AND CAST(IDEA_TEST_PHASE_TGT.ABC_T_TGT_BATCH_LOG.BATCH_START_DTTM AS DATE ) =CURRENT_DATE
AND IDEA_TEST_PHASE_TGT.ABC_T_TGT_BATCH_LOG.BATCH_STATUS <> 'COMPLETED';




);





-----------CREATING TEMP TABLE FOR SUMMERY CALCULATION -------

CREATE TABLE #ABC_T_TGT_ACCOUNT_SUMMERY_TEMP (
      ACCOUNT_ID BIGINT NOT NULL,
      SRC_ACCOUNT_NO DECIMAL(18,4) NOT NULL,
      ACCOUNT_TYPE_CD CHAR(15)  NOT NULL,
      ACCOUNT_SOURCE_CD CHAR(10) CHARACTER SET LATIN UPPERCASE NOT CASESPECIFIC,
      ACCOUNT_CURRENT_STATUS_TYPE_CD CHAR(20) ,
      DISPOSITION_CD CHAR(1) ,
      ACCOUNT_BAL_AMT DECIMAL(38,8),
      ACCOUNT_OPEN_DTTM DATETIME2(0),
      ACCOUNT_CLOSE_DTTM DATETIME2(4),
      ACCOUNT_NAME NVARCHAR(1000) ,
      ACCOUNT_DESC_TXT NVARCHAR(4000) ,
      ETL_INS_DTTM DATETIME2(6),
      ETL_UPD_DTTM DATETIME2(6),
      BATCH_ID DECIMAL(18,0) NOT NULL)DISTRIBUTION = HASH ( ACCOUNT_ID );


DELETE FROM ABC_T_TGT_ACCOUNT_SUMMERY_TEMP ;




INSERT INTO ABC_T_TGT_ACCOUNT_SUMMERY_TEMP
SELECT * FROM IDEA_TEST_PHASE_TGT.ABC_T_TGT_ACCOUNT_SUMMERY ;






/*
############################################################################
#  CLOSING THE BTEQ SCRIPT,  CLOSED AND LOGGING OFF
############################################################################
*/;